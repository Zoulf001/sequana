#######################################
# Example MultiQC Configuration File
#######################################

# This file can be saved either in the MultiQC installation
# directory, or as ~/.multiqc_config.yaml

# Configuration settings are taken from the following locations, in order:
# - Hardcoded in MultiQC (multiqc/utils/config.py)
# - <installation_dir>/multiqc_config.yaml
# - ~/.multiqc_config.yaml
# - Command line options

# Note that all of the values below are set to the MultiQC defaults.
# It's recommended that you delete any that you don't need.


#------------------------------------------------------------------------------
#        TO CHANGE
#-------------------------------------------------------------------------------

# Title to use for the report.
title: "Sequachip"
subtitle: "test of epigenomics"           # Grey text below title
intro_text: "MultiQC reports summarise analysis results produced from ChIP-seq pipeline, part of sequana"          # Set your own text

# Add generic information to the top of reports
report_header_info:
#- Example Config:: 'This is arbitrary'
#- Another field:: 'Loaded from <code>multiqc_config_example.yaml</code>'
    - Contact E-mail: '<login>@example.com'
    - Application Type: 'ChIP-seq'
    - Project Type: 'Differential peak expression'
    - Sequencing Platform: 'HiSeq 2500 High Output V4'
    - Sequencing Setup: 'SR65'
    - Library type : 'Illumina TruSeq'

#-------------------------------------------------------------------------------


# Specify a custom logo to add to reports (uncomment to use)
#custom_logo: '         # '/path/to/logo.png'
#custom_logo_url: ''    # 'https://www.example.com'
#custom_logo_title: ''  # 'Our Institute Name'


#------------------------------------------------------------------------------
#        PLEASE DONT CHANGE FOLLOWING CONFIG
#-------------------------------------------------------------------------------



custom_data:
    idr_metrics:
        id: 'idr_metrics'
        section_name: 'IDR metrics'
        plot_type: 'table'
        pconfig:
            namespace: 'IDR Metrics'
        headers:
            cond:
                title: 'Condition'
                description: 'Condition'
            Replicates:
                title: '# peaks'
                description: 'Total number of peaks passed IDR in replicates'
            PPR:
                title: 'PPR'
                description: 'Total number of peaks passed IDR in pseudo-replicates'
            SPR1:
                title: 'SPR1'
                description: 'Total number of peaks passed IDR in self pseudo-replicates 1'
            SPR2:
                title: 'SPR2'
                description: 'Total number of peaks passed IDR in self pseudo-replicates 1'
            RR:
                title: 'RR'
                description: 'The rescue ratio measures consistency between datasets when the replicates within a single experiment are not comparable.'
                format: '{:,.0f}'
            SCR:
                title: 'SCR'
                description: 'The self-consistency ratio measures consistency within a single dataset'
                format: '{:,.0f}'
            Score:
                title: 'Score'
                description: 'If RR and SCR are ideal, score is equal to 1. If score is -1, results are concerning.'
                format: '{:,.0f}'
    peaks_metrics:
        id: 'Peaks metrics'
        section_name: 'Peaks metrics'
        plot_type: 'table'
        pconfig:
            namespace: 'Number of peaks with MACS2'
        headers:
            Sample:
                title: 'Sample name'
                description: 'Sample Name'
            Peaks:
                title: 'Number of peaks'
                description: 'Number of peaks'

    spikes_metrics:
        id: 'Spikes metrics'
        section_name: 'Spikes metrics'
        plot_type: 'table'
        pconfig:
            namespace: 'Spikes metrics'
        headers:
            Spike:
                title: 'Sample Name'
                description: 'Sample Name'
            MappedReads:
                title: 'Mapped Reads'
                description: 'Number of mapped reads'
            Percent:
                title: 'Percent'
                description: 'Percent'

table_cond_formatting_rules:
    RR:
        pass:
            - lt: 2.0
        warn:
            - gt: 1.8
        fail:
            - gt: 2.0
    SCR:
        pass:
            - lt: 2.0
        fail:
            - gt: 2.0
    Score:
        pass:
            - eq: 1.0
        warn:
            - eq: 0.0
        fail:
            - eq: -1.0
    mqc-generalstats-phantompeakqualtools-NSC:
        pass:
            - gt: 1.05
        warn:
            - lt: 1.05
        fail:
            - lt: 0.9
    mqc-generalstats-phantompeakqualtools-RSC:
        pass:
            - gt: 0.8
        warn:
            - lt: 0.8
        fail:
            - lt: 0.5

top_modules:
    - 'fastqc'
    - 'cutadapt'
    - 'bowtie2'
    - 'picard'
    - 'phantompeakqualtools'
    - 'peaks_metrics'
    - 'idr_metrics'
    - 'spikes_metrics'
    - 'feature_counts'

section_comments:
    idr_metrics: 'Statistics about Irreproducible Discovery Rate (IDR) (see https://www.encodeproject.org/data-standards/terms/#concordance for more information) '




# Prepend sample names with their directory. Useful if analysing the
# sample samples with different parameters.
prepend_dirs: False

# Default output filenames
output_fn_name: multiqc_report.html
data_dir_name: multiqc_data

# Whether to create the parsed data directory in addition to the report
make_data_dir: True

# Cleaning options for sample names. Typically, sample names are detected
# from an input filename. If any of these strings are found, they and any
# text to their right will be discarded.
# For example - file1.fq.gz_trimmed.bam_deduplicated_fastqc.zip
# would be cleaned to 'file1'
# Two options here - fn_clean_exts will replace the defaults,
# extra_fn_clean_exts will append to the defaults
extra_fn_clean_exts:
    - .gz
    - .fastq
    - _trim
    - _mapping.e
    - _sort
    - _sort_dedup_NoBlacklist
    - _sort_dedup
    - type: remove
      pattern: '.sorted'
    - type: regex
      pattern: '^Sample_\d+'



# Ignore these files / directories / paths when searching for logs
fn_ignore_files:
    - .DS_Store
fn_ignore_dirs:
    - annoying_dirname
fn_ignore_paths:
    - '*/path/to/*_files/'

# Ignore files larger than this when searcing for logs (bytes)
log_filesize_limit: 5000000

# MultiQC skips a couple of debug messages when searching files as the
# log can get very verbose otherwise. Re-enable here to help debugging.
report_readerrors: False
report_imgskips: False

# Opt-out of remotely checking that you're running the latest version
no_version_check: False

# How to plot graphs. Different templates can override these settings, but
# the default template can use interactive plots (Javascript using HighCharts)
# or flat plots (images, using MatPlotLib). With interactive plots, the report
# can prevent automatically rendering all graphs if there are lots of samples
# to prevent the browser being locked up when the report opens.
plots_force_flat: False          # Try to use only flat image graphs
plots_force_interactive: False   # Try to use only interactive javascript graphs
plots_flat_numseries: 100        # If neither of the above, use flat if > this number of datasets
num_datasets_plot_limit: 50      # If interactive, don't plot on load if > this number of datasets
max_table_rows: 500              # Swap tables for a beeswarm plot above this

# Overwrite module filename search patterns. See multiqc/utils/search_patterns.yaml
# for the defaults. Remove a default by setting it to null.
sp:
    cutadapt:
        fn: '*trim.txt'
    phantompeakqualtools/out:
        fn: '*_spp.out'
    picard/markdups:
        fn: '*_dedup.txt'
    idr_metrics:
        fn: 'IDR_metrics_mqc.out'
    peaks_metrics:
        fn: 'Peaks_metrics_mqc.out'
    spikes_metrics:
        fn: 'Spikes_metrics_mqc.out'


# Overwrite the defaults of which table columns are visible by default
table_columns_visible:
    FastQC:
        percent_fails: False
        total_sequences: True
